pid /run/nginx.pid;

events {
	worker_connections 768;
}

http {

# Default nginx configuration
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	gzip on;

# SSL Configuration
	ssl_certificate /etc/nginx/cert.pem;
	ssl_certificate_key /etc/nginx/cert.key.pem;
#ssl_trusted_certificate fullchain.pem;

	ssl_dhparam /etc/nginx/dhparam.pem;

	ssl_protocols TLSv1.2;
	ssl_ecdh_curve secp384r1;
	ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
	ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 5m;
	ssl_session_tickets off;

	resolver 8.8.8.8;
	add_header Content-Security-Policy upgrade-insecure-requests;
	add_header Strict-Transport-Security "max-age=15552000; includeSubdomains; preload";

# Actual configuration

	upstream frontend {
		server front:3001;
	}

## Scinna configuration
	server {
		listen 80;
		server_name scinna.drx;

		return 301 https://$host$request_uri;
	}

	server {
		listen 443 ssl http2;
		server_name scinna.drx;

		access_log /var/log/nginx/scinna.access.log combined;
		error_log /var/log/nginx/scinna.error.log warn;

		client_max_body_size 5M;

# If we are on the root, we redirect to the webapp
		location = / {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://frontend;
		}

# Static assets are also served from yarn
		location /static {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://frontend;
		}

# Things to get the debugger / refresh thingies working
		location /main {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://frontend;
		}

		location /sockjs-node {
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_http_version 1.1;
			proxy_set_header X-Real-IP  $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;

			proxy_redirect off;

			proxy_pass http://frontend;
		}

# Finally the scinna API
		location / {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://scinna:1635;
		}
	}

## Adminer
	server {
		listen 80;
		server_name db.scinna.drx;

		return 301 https://$host$request_uri;
	}

	server {
		listen 443 ssl http2;
		server_name db.scinna.drx;

		access_log /var/log/nginx/database.access.log combined;
		error_log /var/log/nginx/database.error.log warn;

		client_max_body_size 5M;

		location / {
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_pass http://adminer:8080;
		}
	}

}
