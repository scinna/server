import styles from '../../assets/scss/ServerSettings.module.scss';
import {useToken} from "../../utils/TokenProvider";
import {Button, TextField} from "@material-ui/core";
import i18n from "i18n-js";
import {apiCall, useApiCall} from "../../utils/useApi";
import {useState} from "react";
import {isScinnaError} from "../../types/Error";
import {Loader} from "../Loader";

type InviteCode = {
  Code: string;
  Author: string;
  GeneratedAt: Date;
  Used: boolean;
};

export function InviteCodes() {
    const {token} = useToken();
    const [generatedToken, setGeneratedToken] = useState<String>("");
    const invites = useApiCall<InviteCode[]>({
        method: 'GET',
        url: '/api/server/admin/invite'
    }, [generatedToken]);

    const generate = async () => {
        const response = await apiCall(token, {
            method: 'POST',
            url: '/api/server/admin/invite'
        });

        if (isScinnaError(response)) {
            console.log("Something went wrong");
            return;
        }

        setGeneratedToken((response as { Code: string }).Code);
    };


    return <div className={styles.Tabbed}>
        <div className={styles.InviteCodesTab__Generator}>
            <TextField disabled={true} label={i18n.t('server_settings.invite.code')} value={generatedToken}/>
            <Button onClick={generate}>{i18n.t('server_settings.invite.generate')}</Button>
        </div>

        <div className={styles.InviteCodesTab__List}>
            {
                invites.status === 'pending'
                &&
                <Loader />
            }
            {
                invites.status === 'success'
                &&
                invites.data.map(invite => <div className={
                    styles.InviteCodesTab__List__Item + " " +
                    (invite.Used ? styles.InviteCodesTab__List__Item__Used : "")
                }>
                    <p>{invite.Code}</p>
                    <p>Generated by {invite.Author}</p>
                    <p>On {invite.GeneratedAt}</p>
                </div>)
            }
            {
                invites.status === 'error'
                &&
                <p>invites.error.Message</p>
            }
        </div>
    </div>;
}